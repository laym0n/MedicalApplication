/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getProfileInfo"];
        put?: never;
        post: operations["create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profile/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["search"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/consultationslot/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["findConsultations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/consultation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCurrentUserConsultations"];
        put?: never;
        post: operations["create_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/authentication": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["authenticate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/authentication/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/consultation/{id}/prescription": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["create_2"];
        trace?: never;
    };
    "/consultationslot/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить информацию о слоте консультации */
        get: operations["getConsultationSlotInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autocomplete/specialization": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCurrentUserConsultations_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CityModel: {
            /** Format: uuid */
            id?: string;
            name?: string;
        };
        DoctorProfileModel: {
            /** Format: uuid */
            id?: string;
            user?: components["schemas"]["UserModel"];
            city?: components["schemas"]["CityModel"];
            name?: string;
            workExperiences?: components["schemas"]["WorkExperienceModel"][];
            educations?: components["schemas"]["EducationModel"][];
            specializations?: components["schemas"]["SpecializationModel"][];
        };
        EducationModel: {
            /** Format: uuid */
            id?: string;
            studyplace?: string;
            specializations?: components["schemas"]["SpecializationModel"][];
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
        };
        ProfileModel: {
            /** Format: uuid */
            id?: string;
            user?: components["schemas"]["UserModel"];
            city?: components["schemas"]["CityModel"];
            name?: string;
        } & components["schemas"]["DoctorProfileModel"];
        SpecializationModel: {
            /** Format: uuid */
            id?: string;
            name?: string;
        };
        UserModel: {
            /** Format: uuid */
            id?: string;
            login?: string;
            password?: string;
            roles?: ("PATIENT" | "DOCTOR" | "MODERATOR")[];
            enabled?: boolean;
        };
        WorkExperienceModel: {
            /** Format: uuid */
            id?: string;
            workplace?: string;
            specialization?: components["schemas"]["SpecializationModel"];
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
        };
        ModelsRequestDtoProfileFiltersDto: {
            filters?: components["schemas"]["ProfileFiltersDto"];
        };
        ProfileFiltersDto: {
            userIds?: string[];
        };
        ModelsResponseDtoProfileModel: {
            models?: components["schemas"]["ProfileModel"][];
        };
        ConsultationSlotsFilterDto: {
            specializationName?: string;
            /** Format: date-time */
            consultationStartDateTime?: string;
        };
        ModelsRequestDtoConsultationSlotsFilterDto: {
            filters?: components["schemas"]["ConsultationSlotsFilterDto"];
        };
        ConsultationSlotModel: {
            /** Format: uuid */
            id?: string;
            specialization?: components["schemas"]["SpecializationModel"];
            /** @example PT2H30M */
            duration?: string;
            user?: components["schemas"]["UserModel"];
        };
        ModelsResponseDtoConsultationSlotModel: {
            models?: components["schemas"]["ConsultationSlotModel"][];
        };
        ConsultationModel: {
            /** Format: uuid */
            id?: string;
            patient?: components["schemas"]["UserModel"];
            doctor?: components["schemas"]["UserModel"];
            /** Format: date-time */
            startDateTime?: string;
            consultationSlot?: components["schemas"]["ConsultationSlotModel"];
        };
        AuthenticationRequest: {
            login: string;
            password: string;
            rememberMe?: boolean;
        };
        ConsultationPrescriptionDto: {
            prescription?: string;
        };
        BlockchainRecord: {
            txId?: string;
        };
        ConsultationSlotInfoDto: {
            consultationSlotModel?: components["schemas"]["ConsultationSlotModel"];
            appointmentDateTimes?: string[];
        };
        ModelsResponseDtoConsultationModel: {
            models?: components["schemas"]["ConsultationModel"][];
        };
        ModelsResponseDtoSpecializationModel: {
            models?: components["schemas"]["SpecializationModel"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getProfileInfo: {
        parameters: {
            query?: {
                userId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProfileModel"];
                };
            };
        };
    };
    create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProfileModel"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ProfileModel"];
                };
            };
        };
    };
    search: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ModelsRequestDtoProfileFiltersDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ModelsResponseDtoProfileModel"];
                };
            };
        };
    };
    findConsultations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ModelsRequestDtoConsultationSlotsFilterDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ModelsResponseDtoConsultationSlotModel"];
                };
            };
        };
    };
    getCurrentUserConsultations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ModelsResponseDtoConsultationModel"];
                };
            };
        };
    };
    create_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConsultationModel"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ConsultationModel"];
                };
            };
        };
    };
    authenticate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthenticationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    create_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConsultationPrescriptionDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BlockchainRecord"];
                };
            };
        };
    };
    getConsultationSlotInfo: {
        parameters: {
            query: {
                appointmentStartDateTime: string;
                appointmentEndDateTime: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ConsultationSlotInfoDto"];
                };
            };
        };
    };
    getCurrentUserConsultations_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ModelsResponseDtoSpecializationModel"];
                };
            };
        };
    };
}
